name: GitHub Issues Killer

on:
  # 定时触发
  schedule:
    # 每小时运行
    - cron: '0 * * * *'
  
  # 允许手动触发
  workflow_dispatch:
    inputs:
      repos:
        description: '要监控的仓库 (格式: owner/repo1,owner/repo2)，留空监控全部'
        required: false
      keywords:
        description: '自定义关键词 (用逗号分隔)'
        required: false
        default: 'spam,恶意,虚假,suspicious,Star,star,异常增长'

jobs:
  scan-and-delete:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository code
        uses: actions/checkout@v3
        
      - name: Set up Python environment
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
          
      - name: 安装依赖
        run: |
          python -m pip install --upgrade pip
          pip install requests
          
      - name: 运行Issues Killer脚本
        env:
          # 使用你在仓库中设置的secret
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          # 使用手动触发时提供的输入或默认为空(全部监控)
          REPOS_TO_MONITOR: ${{ github.event.inputs.repos || '' }}
          # 使用手动触发时提供的输入或默认关键词
          SUSPICIOUS_KEYWORDS: ${{ github.event.inputs.keywords || 'spam,恶意,虚假,suspicious,Star,star,异常增长' }}
        run: python issues_killer_actions.py